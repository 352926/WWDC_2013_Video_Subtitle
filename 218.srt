WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:09.546 A:middle
[ Silence ]

00:00:10.046 --> 00:00:12.366 A:middle
&gt;&gt; Good almost end of
the morning to everybody.

00:00:13.336 --> 00:00:20.836 A:middle
My name's Bruce Nilo, and
I make and create and fix

00:00:20.836 --> 00:00:22.676 A:middle
and break view controllers
for a living.

00:00:23.116 --> 00:00:25.826 A:middle
I assume most of you have
some passing familiarity

00:00:25.826 --> 00:00:26.846 A:middle
with view controllers.

00:00:28.006 --> 00:00:32.466 A:middle
They've been around since the
very first SDK, I believe.

00:00:35.046 --> 00:00:38.436 A:middle
They've kind of grown
over the releases.

00:00:39.576 --> 00:00:42.906 A:middle
They basically are a mechanism

00:00:42.906 --> 00:00:46.676 A:middle
where we help you create
great application flows,

00:00:47.106 --> 00:00:51.516 A:middle
where the transitions kind
of enhance what you're trying

00:00:51.516 --> 00:00:53.356 A:middle
to say in your application.

00:00:54.126 --> 00:00:58.776 A:middle
Over the releases they've
taken up functionality

00:00:58.776 --> 00:01:01.186 A:middle
like helping decide whether

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.776 --> 00:01:01.186 A:middle
like helping decide whether

00:01:01.186 --> 00:01:06.146 A:middle
or not a application should auto
rotate, how it should be laid

00:01:06.146 --> 00:01:09.266 A:middle
out underneath the bars,
not underneath the bars.

00:01:09.926 --> 00:01:17.456 A:middle
In iOS 7 they're going to help
the application decide what the

00:01:17.456 --> 00:01:20.446 A:middle
status bar highlight should be.

00:01:21.286 --> 00:01:25.576 A:middle
We've changed the way
layout works a little bit,

00:01:25.576 --> 00:01:27.606 A:middle
and view controllers are
going to help you do that.

00:01:27.606 --> 00:01:31.016 A:middle
Now I'm not going to talk
about any of that today.

00:01:31.316 --> 00:01:33.916 A:middle
What I'm going to do
is go back to basics.

00:01:34.066 --> 00:01:37.896 A:middle
We're going to talk about view
controllers and transitions.

00:01:39.796 --> 00:01:44.326 A:middle
And software has this
way of kind of emerging.

00:01:44.696 --> 00:01:47.396 A:middle
It kind of -- you go back to
the beginnings all the time,

00:01:47.396 --> 00:01:49.166 A:middle
and you come back with
something even better.

00:01:49.766 --> 00:01:53.096 A:middle
And that's what we've
done for you, I think,

00:01:53.526 --> 00:01:56.706 A:middle
in iOS 7 with view controllers
and custom transitions.

00:01:57.196 --> 00:02:00.496 A:middle
So enough of my intro
to my intro.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:57.196 --> 00:02:00.496 A:middle
So enough of my intro
to my intro.

00:02:02.116 --> 00:02:04.556 A:middle
Let's quickly go over what
I'm going to talk about.

00:02:05.376 --> 00:02:08.235 A:middle
So to do transitions --

00:02:08.235 --> 00:02:11.956 A:middle
and by transitions I am often
kind of taking a shortcut.

00:02:11.956 --> 00:02:15.406 A:middle
I really mean transition
animations right now.

00:02:15.696 --> 00:02:21.306 A:middle
To do them, you need great tools
and API to do those animations.

00:02:21.636 --> 00:02:23.346 A:middle
And we have a bunch
of them already,

00:02:23.596 --> 00:02:27.516 A:middle
but we've added a whole lot
more in iOS 7, and we're going

00:02:27.516 --> 00:02:28.476 A:middle
to go through that quickly.

00:02:28.476 --> 00:02:32.886 A:middle
We're going to talk about custom
view controller transitions,

00:02:33.396 --> 00:02:36.266 A:middle
meaning how you can create
your own, and then we're going

00:02:36.266 --> 00:02:37.286 A:middle
to introduce this notion

00:02:37.286 --> 00:02:39.936 A:middle
of how you can create view
controller transitions

00:02:39.936 --> 00:02:41.016 A:middle
that are interactive.

00:02:41.816 --> 00:02:43.656 A:middle
And then we're going to
go into some other detail.

00:02:43.696 --> 00:02:46.076 A:middle
So let's kind of delve in
a little bit what I mean.

00:02:46.286 --> 00:02:48.766 A:middle
First of all, hopefully
everybody here has used the

00:02:48.766 --> 00:02:52.366 A:middle
block animation API on UI View.

00:02:52.366 --> 00:02:55.136 A:middle
We're going to quickly
review that, because a lot

00:02:55.136 --> 00:02:58.896 A:middle
of the animation tools that
we are adding in iOS 7 are

00:02:58.896 --> 00:03:01.336 A:middle
in fact enhancements
of that API.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:58.896 --> 00:03:01.336 A:middle
in fact enhancements
of that API.

00:03:02.826 --> 00:03:07.246 A:middle
We've introduced kind of a
UI View block-based spring

00:03:07.246 --> 00:03:08.126 A:middle
animation API.

00:03:08.446 --> 00:03:14.156 A:middle
There's a lot of bounciness,
and kind of harmonic transitions

00:03:14.156 --> 00:03:16.096 A:middle
that you see in iOS
7, and we're going

00:03:16.096 --> 00:03:20.036 A:middle
to give you guys an
easy way to do that too.

00:03:20.616 --> 00:03:22.146 A:middle
Key frame animations.

00:03:22.666 --> 00:03:25.586 A:middle
It's been really hard to
get key frame animation

00:03:25.586 --> 00:03:28.576 A:middle
at the UI kit level, you
typically had to dive

00:03:28.576 --> 00:03:31.746 A:middle
down to do it, and we're going
to make that a lot easier too.

00:03:32.926 --> 00:03:36.006 A:middle
And finally there's
probably been a lot of buzz

00:03:36.006 --> 00:03:37.546 A:middle
around UI kit dynamics.

00:03:37.676 --> 00:03:39.166 A:middle
We're going to talk
about that a little bit,

00:03:39.166 --> 00:03:43.736 A:middle
and how it works
ultimately with transitions.

00:03:44.196 --> 00:03:46.356 A:middle
So custom view controller
transitions.

00:03:47.246 --> 00:03:50.446 A:middle
First of all, which of these --

00:03:50.916 --> 00:03:52.666 A:middle
which view controller
transitions are we

00:03:52.666 --> 00:03:53.506 A:middle
talking about?

00:03:53.796 --> 00:03:57.466 A:middle
Well there's kind of three,
maybe three and a half that are

00:03:57.466 --> 00:03:59.746 A:middle
like the big kahunas,
as it were.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.806 --> 00:04:03.746 A:middle
Present and dismiss, you'll
be able to customize those.

00:04:04.236 --> 00:04:07.946 A:middle
Tab bar controller, tab bar
controller actually never really

00:04:07.946 --> 00:04:09.796 A:middle
had any kind of animated
transition.

00:04:09.896 --> 00:04:11.826 A:middle
Well now it will
if you want it to.

00:04:12.656 --> 00:04:14.846 A:middle
Navigation controller,
you've already seen

00:04:14.846 --> 00:04:18.546 A:middle
that we've done a bit out of the
box with navigation controller,

00:04:18.946 --> 00:04:20.505 A:middle
and you're going to
be able to customize

00:04:20.505 --> 00:04:22.005 A:middle
that as well, if you'd like.

00:04:23.026 --> 00:04:28.616 A:middle
And finally, UI collection view
controller, it was kind of thin

00:04:29.546 --> 00:04:33.006 A:middle
as a view controller
coming in on iOS 6.

00:04:33.516 --> 00:04:35.956 A:middle
We've beefed it up a little
bit, and made it work better

00:04:35.956 --> 00:04:37.176 A:middle
with navigation controller.

00:04:37.726 --> 00:04:40.416 A:middle
So now you'll be able to put a
UI collection view controller

00:04:40.416 --> 00:04:43.006 A:middle
in with really almost
no code at all,

00:04:43.266 --> 00:04:47.216 A:middle
have your navigation controller
transitions basically be your

00:04:47.216 --> 00:04:50.326 A:middle
collection view layout
transitions.

00:04:51.646 --> 00:04:53.926 A:middle
We're going to talk about
what a transition is,

00:04:53.926 --> 00:04:56.576 A:middle
just so that we're all
speaking the same language.

00:04:57.096 --> 00:05:02.286 A:middle
There's a lot of API, and
we're going to go through it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:57.096 --> 00:05:02.286 A:middle
There's a lot of API, and
we're going to go through it.

00:05:02.286 --> 00:05:04.596 A:middle
There's going to be a lot of
code that doesn't fit very well

00:05:04.596 --> 00:05:08.026 A:middle
on these slides, and
I apologize for that.

00:05:09.076 --> 00:05:10.976 A:middle
Interactive view
controller transitions.

00:05:11.006 --> 00:05:12.336 A:middle
Well there's one -- actually

00:05:12.726 --> 00:05:15.696 A:middle
in iOS 6 we had UI page view
controller, and you could swipe

00:05:15.696 --> 00:05:17.926 A:middle
that back and forth,
that's an example

00:05:17.926 --> 00:05:19.516 A:middle
of an interactive
view controller,

00:05:19.516 --> 00:05:21.686 A:middle
or an interactive transition.

00:05:21.686 --> 00:05:26.736 A:middle
In iOS 7, the pop gesture
is now interactive as well.

00:05:27.536 --> 00:05:33.206 A:middle
And basically, you
guys can add your own.

00:05:33.466 --> 00:05:36.326 A:middle
We've beefed up collection
view a bit too,

00:05:36.326 --> 00:05:39.226 A:middle
so collection view
can now be interactive

00:05:39.226 --> 00:05:40.776 A:middle
in a couple of different ways.

00:05:41.076 --> 00:05:43.906 A:middle
And we're going to talk about
that, and again in the context

00:05:43.906 --> 00:05:46.796 A:middle
of how you can use it
for your custom view

00:05:46.796 --> 00:05:48.026 A:middle
controller transitions.

00:05:49.736 --> 00:05:53.316 A:middle
Interactivity introduces
an introducing twist

00:05:53.316 --> 00:05:54.816 A:middle
for a view controller
transition,

00:05:54.816 --> 00:05:57.256 A:middle
in that you can change your
mind halfway through it.

00:05:57.256 --> 00:06:01.186 A:middle
I mean you don't have to change
your mind, but the user --

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:57.256 --> 00:06:01.186 A:middle
I mean you don't have to change
your mind, but the user --

00:06:01.186 --> 00:06:04.616 A:middle
and certainly this is the case
with the pop gesture in iOS 7 --

00:06:04.616 --> 00:06:07.676 A:middle
the user might kind of
move their finger halfway,

00:06:07.676 --> 00:06:10.016 A:middle
and then say nah, I want to
be back where I started from.

00:06:10.016 --> 00:06:11.726 A:middle
And there's some
implications to that

00:06:11.726 --> 00:06:12.916 A:middle
that we're going to talk about.

00:06:13.226 --> 00:06:16.386 A:middle
To kind of help with
some of those issues,

00:06:16.386 --> 00:06:18.966 A:middle
we've introduced a brand new
object called a transition

00:06:18.966 --> 00:06:23.676 A:middle
coordinator, and as we
implemented it initially

00:06:23.676 --> 00:06:27.806 A:middle
to help deal with cancelled
transitions, it became clear

00:06:27.806 --> 00:06:30.176 A:middle
that it solved a lot of other
interesting problems too,

00:06:30.176 --> 00:06:32.866 A:middle
and we're going to
talk about that.

00:06:33.056 --> 00:06:37.156 A:middle
So let's go into the
new animation APIs

00:06:37.156 --> 00:06:38.216 A:middle
that we have to offer.

00:06:40.556 --> 00:06:45.976 A:middle
So, these two methods I
believe were from the beginning,

00:06:46.246 --> 00:06:48.736 A:middle
that's not the block-based API.

00:06:49.636 --> 00:06:53.176 A:middle
This one was introduced
I believe in iOS 4,

00:06:53.446 --> 00:06:57.536 A:middle
and if you guys aren't
using this for your kind

00:06:57.586 --> 00:07:01.106 A:middle
of UI view level
transitions, you probably want

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:57.586 --> 00:07:01.106 A:middle
of UI view level
transitions, you probably want

00:07:01.356 --> 00:07:03.906 A:middle
to take your view controllers
in for a tune-up, and your views

00:07:03.906 --> 00:07:05.116 A:middle
in for a tune-up as well.

00:07:05.836 --> 00:07:11.066 A:middle
So let's look and see
what the connection is

00:07:11.096 --> 00:07:14.686 A:middle
between this method
and core animation.

00:07:14.686 --> 00:07:19.436 A:middle
You don't really need to know
much about core animation

00:07:19.436 --> 00:07:24.346 A:middle
to use the UI kit
animation APIs, but it helps

00:07:24.346 --> 00:07:26.996 A:middle
to have a little bit of depth
to understand what's going on.

00:07:27.756 --> 00:07:32.476 A:middle
So inside of this block
-- this animation block,

00:07:32.926 --> 00:07:36.276 A:middle
you can update arbitrary
properties on your views.

00:07:37.866 --> 00:07:42.216 A:middle
Views are layer backed in UI
kit, and on iOS for that matter,

00:07:42.786 --> 00:07:44.716 A:middle
and as you update
those properties,

00:07:45.406 --> 00:07:49.066 A:middle
the various properties are kind
of updated at the layer level.

00:07:49.666 --> 00:07:56.826 A:middle
And when you're in that block,
core animation objects get added

00:07:56.826 --> 00:07:59.046 A:middle
to the layer, and that's
actually what's driving the

00:07:59.046 --> 00:08:01.526 A:middle
animations that you
see throughout iOS.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.046 --> 00:08:01.526 A:middle
animations that you
see throughout iOS.

00:08:01.646 --> 00:08:08.636 A:middle
Sometimes you get caught
within of the dynamic scope

00:08:08.636 --> 00:08:11.246 A:middle
of these blocks, and
you don't expect to be.

00:08:11.836 --> 00:08:13.706 A:middle
And so we added some
API that you could --

00:08:13.706 --> 00:08:16.456 A:middle
I mean a long time ago that you
could disable and enable whether

00:08:16.456 --> 00:08:20.766 A:middle
or not you wanted the properties
that you were tweaking

00:08:20.766 --> 00:08:22.306 A:middle
to actually be animated.

00:08:24.196 --> 00:08:26.846 A:middle
This API has a little
bit of problems,

00:08:26.846 --> 00:08:29.836 A:middle
in particular I can't tell you
the number of bugs I've gotten

00:08:29.836 --> 00:08:33.496 A:middle
where somebody forgets to set
it back to the right value,

00:08:33.496 --> 00:08:36.806 A:middle
and things don't animate,
and all hell breaks out.

00:08:37.426 --> 00:08:39.226 A:middle
So we've added this
block-based API

00:08:39.226 --> 00:08:44.806 A:middle
that you can basically execute
code which will guarantee not

00:08:44.806 --> 00:08:48.346 A:middle
to animate, if it's executed
in the block that you pass

00:08:48.346 --> 00:08:49.806 A:middle
in to perform without animation.

00:08:52.326 --> 00:08:56.086 A:middle
Okay, so now to something
new, spring animations.

00:08:57.196 --> 00:09:03.096 A:middle
Great thing is you don't
have to know about, you know,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:57.196 --> 00:09:03.096 A:middle
Great thing is you don't
have to know about, you know,

00:09:03.096 --> 00:09:06.466 A:middle
solutions to single dimensional
harmonic oscillators.

00:09:06.846 --> 00:09:09.036 A:middle
The reality is we --

00:09:09.566 --> 00:09:13.556 A:middle
people actually kind of iterate
the values, the damping ratio,

00:09:13.556 --> 00:09:17.876 A:middle
and the spring velocities which
are two new terms, or parameters

00:09:17.876 --> 00:09:19.506 A:middle
that we've added
to some new API.

00:09:20.196 --> 00:09:24.836 A:middle
And basically we support
critically damped oscillations

00:09:24.936 --> 00:09:27.206 A:middle
to under-damped oscillations.

00:09:27.206 --> 00:09:29.596 A:middle
We don't do over-dampen.

00:09:30.276 --> 00:09:31.946 A:middle
And the API looks like this.

00:09:31.946 --> 00:09:35.116 A:middle
It looks pretty familiar, except
it has those two new parameters.

00:09:35.426 --> 00:09:38.766 A:middle
And I'm going to
show some examples

00:09:38.766 --> 00:09:42.166 A:middle
of this later on in the talk.

00:09:42.676 --> 00:09:47.346 A:middle
Key frame animations, animate
key frames with duration is

00:09:47.376 --> 00:09:51.656 A:middle
to CA key frame animation
as animate with duration is

00:09:51.656 --> 00:09:52.926 A:middle
to CA basic animation.

00:09:53.086 --> 00:09:56.376 A:middle
Yeah, I have some kids who
just go through their SATs,

00:09:56.376 --> 00:09:59.206 A:middle
so I thought an analogy
would be good.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.986 --> 00:10:04.896 A:middle
So you specify key frames
within the animation block,

00:10:05.116 --> 00:10:09.446 A:middle
we've augmented the options to
include the calculation mode.

00:10:09.796 --> 00:10:12.916 A:middle
It can pose as great with other
UI view animation methods.

00:10:13.176 --> 00:10:16.656 A:middle
So there it goes for
your use in iOS 7.

00:10:16.656 --> 00:10:19.126 A:middle
What's a little bit different
is this add key frame

00:10:19.126 --> 00:10:20.416 A:middle
with relative start time.

00:10:21.256 --> 00:10:23.906 A:middle
The way you'd structure your
code is something like that.

00:10:24.636 --> 00:10:27.816 A:middle
Those add key frames are
actually the key frame values

00:10:27.816 --> 00:10:29.946 A:middle
of the particular
property most likely,

00:10:29.946 --> 00:10:32.396 A:middle
or they could be
multiple properties

00:10:32.646 --> 00:10:35.346 A:middle
at different points
in the animation.

00:10:37.436 --> 00:10:42.046 A:middle
Finally I wanted -- have a small
callout to the new snapshot API,

00:10:42.276 --> 00:10:46.396 A:middle
because with these snapshots,
for one thing they're nice

00:10:46.396 --> 00:10:49.686 A:middle
and efficient, but for the other
thing is this snapshot API lets

00:10:49.686 --> 00:10:52.336 A:middle
you build some really incredible
transitions, and we're going

00:10:52.336 --> 00:10:53.586 A:middle
to show some of those as well.

00:10:54.946 --> 00:10:58.656 A:middle
An interesting point to note
is when you create a snapshot,

00:10:58.656 --> 00:11:00.546 A:middle
you can create snapshots
of snapshots,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.656 --> 00:11:00.546 A:middle
you can create snapshots
of snapshots,

00:11:00.546 --> 00:11:02.386 A:middle
and that can also
be pretty useful.

00:11:02.956 --> 00:11:09.116 A:middle
Okay, UI kit dynamics,
it's distinct from all

00:11:09.116 --> 00:11:12.116 A:middle
of the UI view animation APIs,
it's important to understand

00:11:12.116 --> 00:11:14.246 A:middle
that because there's
some kind of tricks --

00:11:14.246 --> 00:11:15.566 A:middle
or not tricks, but helper --

00:11:15.566 --> 00:11:18.656 A:middle
there's a helper class that we
offer that really only works

00:11:18.656 --> 00:11:22.456 A:middle
if your transition -- if your
custom transition is using the

00:11:22.456 --> 00:11:23.816 A:middle
UI view animation API.

00:11:24.016 --> 00:11:26.006 A:middle
We're going to talk
about this a lot more

00:11:26.286 --> 00:11:27.906 A:middle
in this morning's advanced --

00:11:27.906 --> 00:11:32.376 A:middle
in this afternoon's advanced
dynamics talk, so I invite you

00:11:32.376 --> 00:11:34.526 A:middle
to that if you find
this stuff interesting.

00:11:35.616 --> 00:11:38.966 A:middle
Okay, first of all I want to --
the room to take a deep breath.

00:11:39.226 --> 00:11:41.116 A:middle
This stuff is really
easy to use.

00:11:41.816 --> 00:11:43.626 A:middle
A lot of people that
I've showed it

00:11:43.626 --> 00:11:46.176 A:middle
to get a little bit
confused, but it really is.

00:11:46.536 --> 00:11:48.676 A:middle
So first of all,
presentations and dismissals.

00:11:48.676 --> 00:11:53.106 A:middle
You can customize your
full-screen presentations,

00:11:54.006 --> 00:11:56.226 A:middle
but we added a new
modal presentation type,

00:11:56.636 --> 00:11:59.246 A:middle
which is presentation
custom, fancy that.

00:11:59.246 --> 00:12:00.736 A:middle
And the difference with --

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.246 --> 00:12:00.736 A:middle
And the difference with --

00:12:00.736 --> 00:12:02.996 A:middle
about that is that it
actually doesn't remove the

00:12:02.996 --> 00:12:04.986 A:middle
from view controller from
the window hierarchy.

00:12:05.486 --> 00:12:08.856 A:middle
So you can actually build your
own kind of form sheet type

00:12:08.856 --> 00:12:11.016 A:middle
of presentation if you
wanted to on the phone.

00:12:11.016 --> 00:12:12.486 A:middle
I'm going to show
you an example --

00:12:12.486 --> 00:12:15.006 A:middle
a few examples of that actually.

00:12:15.356 --> 00:12:16.236 A:middle
So that's what it is.

00:12:16.576 --> 00:12:19.386 A:middle
We're going to talk about
the new things in a bit,

00:12:19.856 --> 00:12:23.106 A:middle
but really you set
your presentation type,

00:12:23.106 --> 00:12:26.116 A:middle
you create this new little
delegate object that you assign

00:12:26.116 --> 00:12:27.646 A:middle
to the view controller
that you're presenting,

00:12:27.646 --> 00:12:30.226 A:middle
and you call present view
controller, and you're done.

00:12:30.376 --> 00:12:32.026 A:middle
That's it.

00:12:32.296 --> 00:12:35.906 A:middle
Tab bar controller,
there's actually nothing

00:12:35.906 --> 00:12:36.716 A:middle
to change there.

00:12:36.716 --> 00:12:38.096 A:middle
You're just going
to set a delegate

00:12:38.406 --> 00:12:40.876 A:middle
that vends [phonetic]
the right object.

00:12:41.566 --> 00:12:43.106 A:middle
Same with navigation controller.

00:12:43.736 --> 00:12:46.146 A:middle
So I'm giving you the
programmatic variance of this,

00:12:46.146 --> 00:12:49.796 A:middle
but of course if you hit
buttons that effectively call

00:12:49.796 --> 00:12:52.706 A:middle
into these code pads, you will
have your custom transitions

00:12:52.706 --> 00:12:55.396 A:middle
for both navigation controller
and tab bar controller.

00:12:57.346 --> 00:12:59.726 A:middle
So I mentioned about
navigation controller

00:12:59.726 --> 00:13:03.236 A:middle
and collection view controller,
we can refer to those as layout

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.726 --> 00:13:03.236 A:middle
and collection view controller,
we can refer to those as layout

00:13:03.236 --> 00:13:05.266 A:middle
to layout navigation
transitions.

00:13:06.616 --> 00:13:09.886 A:middle
Basically all you need to do is
set that one property to yes,

00:13:10.656 --> 00:13:12.436 A:middle
and push your view controllers.

00:13:12.586 --> 00:13:14.756 A:middle
And all of the view
controllers that you push

00:13:14.756 --> 00:13:17.006 A:middle
or pop will actually
be transitioning,

00:13:17.006 --> 00:13:21.246 A:middle
using set collection
view layout.

00:13:21.416 --> 00:13:23.826 A:middle
So that's pretty cool.

00:13:24.246 --> 00:13:25.526 A:middle
So I'd like to take a minute

00:13:25.566 --> 00:13:29.106 A:middle
to show you guys a small
demo app I wrote --

00:13:30.716 --> 00:13:35.146 A:middle
nod to the demo Gods to
hope that it actually works.

00:13:35.506 --> 00:13:37.406 A:middle
Oh look at that.

00:13:37.406 --> 00:13:40.566 A:middle
Demo Gods are kind.

00:13:40.696 --> 00:13:44.716 A:middle
So here we have this kind
of pretty simple app,

00:13:44.716 --> 00:13:47.286 A:middle
it's kind of Ansel Adams'esque,

00:13:47.286 --> 00:13:50.796 A:middle
and this was done even before I
knew we had a California theming

00:13:50.796 --> 00:13:51.756 A:middle
thing going on.

00:13:52.166 --> 00:13:53.906 A:middle
That's Yosemite in
the background.

00:13:54.966 --> 00:13:56.596 A:middle
Basically, unless
I say differently,

00:13:56.596 --> 00:13:59.776 A:middle
every transition you're going to
see here is a custom transition.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:00.386 --> 00:14:02.026 A:middle
So let's do the slide.

00:14:03.106 --> 00:14:05.766 A:middle
Now you might think hey,
that's just a normal push.

00:14:06.236 --> 00:14:08.466 A:middle
Well, look at the
navigation bar.

00:14:08.466 --> 00:14:10.476 A:middle
There's a trans -- there's
kind of a cross fade.

00:14:10.736 --> 00:14:14.426 A:middle
Any custom transition with the
navigation bar is actually going

00:14:14.496 --> 00:14:16.756 A:middle
to -- I mean with the navigation
controller is actually going

00:14:16.756 --> 00:14:18.626 A:middle
to do a cross fade on
the navigation bar.

00:14:19.206 --> 00:14:21.486 A:middle
To highlight what
I am talking about,

00:14:21.486 --> 00:14:24.476 A:middle
I'm going to change the edge
that we're going to go to.

00:14:24.476 --> 00:14:26.996 A:middle
I might be doing this too fast,
but I'm going to change it

00:14:26.996 --> 00:14:27.966 A:middle
to come in from the top.

00:14:28.526 --> 00:14:31.886 A:middle
By the way, let me also
point out, you see that view

00:14:31.886 --> 00:14:32.886 A:middle
that just got presented?

00:14:33.286 --> 00:14:36.376 A:middle
That was a custom presentation.

00:14:36.716 --> 00:14:38.686 A:middle
So it has the backdrop,
the dimming view,

00:14:38.686 --> 00:14:42.156 A:middle
it's kind of a slow
form sheet on a phone.

00:14:42.486 --> 00:14:46.766 A:middle
So if I do the slide again, oop
I'm coming down from the top.

00:14:46.896 --> 00:14:50.896 A:middle
So all this is pretty
straightforward.

00:14:50.896 --> 00:14:51.826 A:middle
Let's look at bouncing.

00:14:52.316 --> 00:14:54.736 A:middle
So this is a spring
animation, and I want you

00:14:54.736 --> 00:14:59.036 A:middle
to notice it's kind of a
under-damped coming in.

00:14:59.036 --> 00:15:02.286 A:middle
You'll notice a little kind of
bounce that comes in and out

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.036 --> 00:15:02.286 A:middle
You'll notice a little kind of
bounce that comes in and out

00:15:02.286 --> 00:15:05.946 A:middle
of that, and then it's
critically damped going out.

00:15:05.986 --> 00:15:09.406 A:middle
If we change the
damping ratio here

00:15:09.406 --> 00:15:13.206 A:middle
to make it a little bit
more bouncy, you're going

00:15:13.806 --> 00:15:17.246 A:middle
to see what happens,
that it's going to kind

00:15:17.246 --> 00:15:18.596 A:middle
of overshoot and bounce.

00:15:18.596 --> 00:15:20.896 A:middle
And so you can change these
parameters as you like,

00:15:20.896 --> 00:15:23.426 A:middle
and get different types
of spring effects.

00:15:23.746 --> 00:15:25.996 A:middle
And they're pretty performant.

00:15:26.266 --> 00:15:29.006 A:middle
So for simple types of bounces,
you don't really need to go

00:15:29.006 --> 00:15:31.236 A:middle
into UI kit dynamics
as an example.

00:15:31.956 --> 00:15:33.786 A:middle
So now let's look at
key frame animations.

00:15:33.786 --> 00:15:36.246 A:middle
I'm going to show you two
demos on key frame animation,

00:15:36.246 --> 00:15:39.186 A:middle
but the first one I
call the foldout thing,

00:15:40.076 --> 00:15:43.806 A:middle
and that's using snapshots
and key frames to do kind

00:15:43.806 --> 00:15:47.526 A:middle
of an interesting
fold push or pop.

00:15:47.996 --> 00:15:55.176 A:middle
I can actually make that work
on a presentation as well,

00:15:55.176 --> 00:15:58.686 A:middle
and this is the exact same code,

00:15:58.686 --> 00:16:00.206 A:middle
I'm just setting
different delegates.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.686 --> 00:16:00.206 A:middle
I'm just setting
different delegates.

00:16:00.206 --> 00:16:01.856 A:middle
And the code that you've written

00:16:01.856 --> 00:16:04.496 A:middle
for your transitions
is just going to work,

00:16:05.406 --> 00:16:07.066 A:middle
whether it's a present, a push,

00:16:07.466 --> 00:16:09.976 A:middle
tab bar controller
select, etcetera.

00:16:10.936 --> 00:16:12.776 A:middle
So now I'm going to jump

00:16:12.776 --> 00:16:14.296 A:middle
to something a little
bit different.

00:16:14.296 --> 00:16:16.096 A:middle
I'm going to do a
collection view thing.

00:16:16.096 --> 00:16:18.186 A:middle
Now this was a standard
transition.

00:16:18.186 --> 00:16:20.666 A:middle
You'll notice if I hit the
-- kind of slide it out,

00:16:20.666 --> 00:16:23.856 A:middle
notice how the navigation bar's
kind of doing that slide thing.

00:16:23.856 --> 00:16:26.496 A:middle
That's the default
navigation bar transition,

00:16:27.006 --> 00:16:30.256 A:middle
and this is the built-in
pop gesture on iOS 7.

00:16:30.606 --> 00:16:32.846 A:middle
But now what we have is we have
the collection view controller

00:16:32.846 --> 00:16:33.536 A:middle
that we pushed in.

00:16:33.536 --> 00:16:36.166 A:middle
And when I tap on
one of these squares,

00:16:36.166 --> 00:16:37.616 A:middle
I'm going to push another one.

00:16:37.996 --> 00:16:40.266 A:middle
And you'll notice
that we're still

00:16:40.266 --> 00:16:41.536 A:middle
in the navigation controller,

00:16:41.536 --> 00:16:44.276 A:middle
and we've changed
view controllers,

00:16:44.276 --> 00:16:48.106 A:middle
but the navigation bar now works

00:16:48.106 --> 00:16:49.606 A:middle
with your collection
view layout.

00:16:49.606 --> 00:16:55.726 A:middle
And what's interesting is the
built-in pop gesture works too.

00:16:56.486 --> 00:16:57.506 A:middle
You get that for free.

00:16:57.756 --> 00:17:00.996 A:middle
So I'm not going to talk
much about UI kit dynamics,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:57.756 --> 00:17:00.996 A:middle
So I'm not going to talk
much about UI kit dynamics,

00:17:01.146 --> 00:17:02.576 A:middle
but I do want to
whet your appetite

00:17:02.576 --> 00:17:03.826 A:middle
for this afternoon's talk.

00:17:04.496 --> 00:17:08.425 A:middle
So here we go, here's
a drop animation.

00:17:08.425 --> 00:17:10.316 A:middle
This is a dialog that comes in,

00:17:10.796 --> 00:17:13.896 A:middle
and give you something
nice to know.

00:17:13.896 --> 00:17:16.046 A:middle
You notice how it came in,
it bounced a little bit,

00:17:16.046 --> 00:17:18.856 A:middle
and now I want to dismiss it,

00:17:20.146 --> 00:17:23.506 A:middle
and [laughter] I'm not saying
that's good UI [laughter], but,

00:17:23.506 --> 00:17:26.766 A:middle
you know, it's kind of cool.

00:17:26.766 --> 00:17:33.286 A:middle
Okay, so let's talk a little
bit about how to do this.

00:17:34.186 --> 00:17:35.166 A:middle
Transitions.

00:17:35.366 --> 00:17:39.756 A:middle
I'm going to -- this is
kind of a stylized rendition

00:17:39.826 --> 00:17:44.076 A:middle
of a push transition on
a navigation controller.

00:17:44.076 --> 00:17:46.006 A:middle
The blue is the view hierarchy,

00:17:46.006 --> 00:17:47.896 A:middle
the yellow is the view
controller hierarchy,

00:17:48.426 --> 00:17:50.496 A:middle
and basically the
definition of the start state

00:17:50.496 --> 00:17:52.506 A:middle
and the end state,
'cause the transition

00:17:52.506 --> 00:17:55.926 A:middle
between states is the
view controller hierarchy

00:17:55.926 --> 00:17:57.726 A:middle
and the view hierarchy,
they're consistent.

00:17:58.396 --> 00:18:02.396 A:middle
Now to move from one to the
other, you go through this kind

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.396 --> 00:18:02.396 A:middle
Now to move from one to the
other, you go through this kind

00:18:02.396 --> 00:18:03.876 A:middle
of inconsistent phase.

00:18:04.266 --> 00:18:07.546 A:middle
And so basically now
we have, you know,

00:18:07.546 --> 00:18:10.396 A:middle
we have the child view hierarchy
that's a little bit different

00:18:10.396 --> 00:18:11.806 A:middle
than the view controller
hierarchy,

00:18:11.806 --> 00:18:13.866 A:middle
and we're in -- we're
transition.

00:18:15.056 --> 00:18:18.496 A:middle
And part of a transition
is to animate,

00:18:19.446 --> 00:18:21.786 A:middle
and you add child B's view in,

00:18:21.786 --> 00:18:24.266 A:middle
you do whatever snazzy
animation you want.

00:18:25.476 --> 00:18:26.506 A:middle
Things are looking good.

00:18:26.506 --> 00:18:28.936 A:middle
They're not -- you're not
fully consistent yet though

00:18:29.836 --> 00:18:32.016 A:middle
until you do something else,
because we have a lot of things

00:18:32.016 --> 00:18:33.916 A:middle
that need to get wired
up again in terms

00:18:33.916 --> 00:18:39.586 A:middle
of our internal data
structures and the like.

00:18:40.996 --> 00:18:43.666 A:middle
So, the states are consistent
view controller hierarchy

00:18:43.666 --> 00:18:44.706 A:middle
and view hierarchy,

00:18:44.866 --> 00:18:47.206 A:middle
you transition programmatically
hitting a button,

00:18:48.616 --> 00:18:52.476 A:middle
and there's a few things
that we do to figure

00:18:52.476 --> 00:18:54.816 A:middle
out where you should
start, where you should end,

00:18:54.816 --> 00:18:58.756 A:middle
and what you need to do to
finish, and basically that's it.

00:18:59.016 --> 00:19:00.076 A:middle
So that highlighted --

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.016 --> 00:19:00.076 A:middle
So that highlighted --

00:19:00.626 --> 00:19:03.346 A:middle
those highlighted statements
are what we've reified

00:19:03.396 --> 00:19:05.146 A:middle
into a new system object.

00:19:05.536 --> 00:19:08.416 A:middle
And this system object is going
to be pretty critical for you

00:19:08.416 --> 00:19:11.166 A:middle
when you're building
your custom transitions.

00:19:11.166 --> 00:19:13.706 A:middle
It's called UI view controller
context transitioning.

00:19:14.156 --> 00:19:16.946 A:middle
We have a competition
in UI kit to come

00:19:16.946 --> 00:19:18.346 A:middle
up with the longest names.

00:19:18.906 --> 00:19:22.326 A:middle
I'm a contender, but
I haven't won yet.

00:19:23.416 --> 00:19:26.686 A:middle
And so this transitioning
object has some interesting bits

00:19:26.686 --> 00:19:27.406 A:middle
of information.

00:19:27.406 --> 00:19:29.206 A:middle
One is the view in
which you animate,

00:19:29.466 --> 00:19:32.156 A:middle
that's an important thing
to know, the other is

00:19:32.156 --> 00:19:34.246 A:middle
where you started from,
where you're ending.

00:19:34.576 --> 00:19:37.326 A:middle
It's important to
actually start and end

00:19:37.326 --> 00:19:39.876 A:middle
from where the system
wants you to start and end.

00:19:40.316 --> 00:19:43.696 A:middle
And then there's this method
called complete transition.

00:19:43.696 --> 00:19:45.986 A:middle
It's kind of a callback
that you do at the end.

00:19:45.986 --> 00:19:47.976 A:middle
And if you don't do that,
we're not going to be back

00:19:47.976 --> 00:19:49.156 A:middle
into a consistent state.

00:19:49.156 --> 00:19:54.806 A:middle
So this object that gets passed
into a number of our other --

00:19:54.806 --> 00:19:58.136 A:middle
a number of the objects that
you are going to create and vend

00:19:58.136 --> 00:20:00.116 A:middle
to create your custom
transitions needs

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.136 --> 00:20:00.116 A:middle
to create your custom
transitions needs

00:20:00.116 --> 00:20:01.516 A:middle
to call back into that method.

00:20:02.076 --> 00:20:04.766 A:middle
So this is one of the objects
that you will be creating.

00:20:04.766 --> 00:20:07.776 A:middle
It will be any object that
conforms to this protocol,

00:20:08.526 --> 00:20:10.556 A:middle
UI view controller
animated transitioning.

00:20:11.116 --> 00:20:12.536 A:middle
There's two required methods,

00:20:12.536 --> 00:20:14.586 A:middle
you've got to tell it how
long is this transition going

00:20:14.586 --> 00:20:17.126 A:middle
to take, and then you've got to
implement animate transition.

00:20:17.196 --> 00:20:18.986 A:middle
And you'll notice that
it's passed in one

00:20:18.986 --> 00:20:20.366 A:middle
of those context objects.

00:20:20.686 --> 00:20:23.306 A:middle
So let's go back to the
intermediate step here.

00:20:23.306 --> 00:20:26.656 A:middle
So what's going to happen is
the system is going to call you.

00:20:26.656 --> 00:20:28.796 A:middle
You've done push view
controller, the system is going

00:20:28.796 --> 00:20:31.386 A:middle
to call you at some
point and say okay,

00:20:31.386 --> 00:20:32.506 A:middle
animate your transition.

00:20:33.046 --> 00:20:36.876 A:middle
You're going to put your
child view controller's view

00:20:36.876 --> 00:20:39.066 A:middle
into that parent container view,

00:20:39.786 --> 00:20:42.546 A:middle
do your fantastic
animation using all

00:20:42.546 --> 00:20:47.216 A:middle
of those new UI view animation
APIs, and then at the end

00:20:47.216 --> 00:20:49.246 A:middle
of the day when the
transition is done, you're going

00:20:49.246 --> 00:20:51.866 A:middle
to call the context complete
transition, and you're back

00:20:51.866 --> 00:20:52.806 A:middle
into a consistent state.

00:20:53.396 --> 00:20:54.276 A:middle
That's really it.

00:20:54.736 --> 00:20:58.056 A:middle
I'm going to go through
this a few different times

00:20:58.056 --> 00:21:00.666 A:middle
and a few different
ways, so that we'll try

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.056 --> 00:21:00.666 A:middle
and a few different
ways, so that we'll try

00:21:00.666 --> 00:21:03.826 A:middle
to demystify some of this stuff.

00:21:05.196 --> 00:21:08.666 A:middle
First of all, you vend these
objects with delegates.

00:21:08.776 --> 00:21:10.716 A:middle
There's a new transitioning
delegate protocol

00:21:10.716 --> 00:21:12.986 A:middle
that we've added, and we've
augmented the navigation

00:21:12.986 --> 00:21:14.896 A:middle
controller and tab bar
controller delegate.

00:21:14.896 --> 00:21:16.796 A:middle
And those delegates are going

00:21:16.796 --> 00:21:19.676 A:middle
to vend these animated
transitioning objects,

00:21:19.676 --> 00:21:21.696 A:middle
as well as an interactive
transitioning object,

00:21:21.696 --> 00:21:24.386 A:middle
which we're going to talk
about in a few minutes.

00:21:24.386 --> 00:21:25.906 A:middle
I'm pushing kind
of interactivity

00:21:25.906 --> 00:21:26.756 A:middle
to the side right now.

00:21:27.496 --> 00:21:29.796 A:middle
And all of these are
pass at context object,

00:21:29.796 --> 00:21:31.016 A:middle
and that's a system object.

00:21:31.016 --> 00:21:34.556 A:middle
You are most likely not going
to ever have to create an object

00:21:34.556 --> 00:21:37.186 A:middle
that conforms to the context
transitioning protocol,

00:21:37.836 --> 00:21:40.226 A:middle
however you do need to
create objects that conform

00:21:40.226 --> 00:21:41.276 A:middle
to those other protocols.

00:21:42.036 --> 00:21:43.196 A:middle
So let's look at this again.

00:21:43.236 --> 00:21:45.566 A:middle
As I said, I'm going to do this
a couple of different ways,

00:21:46.406 --> 00:21:48.736 A:middle
because I've been informed
that it can be confusing.

00:21:49.106 --> 00:21:51.216 A:middle
So first of all, you set
the transitioning delegate.

00:21:51.216 --> 00:21:53.496 A:middle
I'm kind of walking
through what do you do

00:21:53.496 --> 00:21:54.906 A:middle
for a custom presentation.

00:21:57.896 --> 00:21:59.266 A:middle
You say present view controller.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:00.596 --> 00:22:04.876 A:middle
The system is going to ask your
delegate, if you've set one,

00:22:05.326 --> 00:22:07.656 A:middle
do you have an animation
controller for me to use?

00:22:07.946 --> 00:22:11.406 A:middle
And if you have implemented
that method on the delegate,

00:22:11.406 --> 00:22:14.736 A:middle
and you vend one of these
objects, then we're going

00:22:14.736 --> 00:22:16.116 A:middle
to do something slightly
different.

00:22:16.736 --> 00:22:19.616 A:middle
We're going to ask you at some
point how long is the transition

00:22:19.616 --> 00:22:22.446 A:middle
going to take, and we are going
to call animate transition

00:22:22.446 --> 00:22:25.186 A:middle
on your object, passing
in one of these contexts.

00:22:26.316 --> 00:22:27.986 A:middle
Finally when your
animation is done,

00:22:27.986 --> 00:22:29.386 A:middle
you call complete transition.

00:22:30.606 --> 00:22:32.316 A:middle
Got it? Complete transition.

00:22:32.896 --> 00:22:34.306 A:middle
You don't call complete
transition,

00:22:34.736 --> 00:22:35.816 A:middle
and you'll be unhappy.

00:22:36.296 --> 00:22:41.536 A:middle
Okay. Let's look at it
slightly differently,

00:22:41.536 --> 00:22:42.666 A:middle
let's look at it as code.

00:22:42.736 --> 00:22:46.246 A:middle
Code, this kind of
looks pretty standard.

00:22:46.246 --> 00:22:48.516 A:middle
You set the delegate, you
set the presentation style,

00:22:48.516 --> 00:22:49.526 A:middle
you're off to the races.

00:22:49.526 --> 00:22:49.926 A:middle
You present.

00:22:50.926 --> 00:22:52.466 A:middle
This is code that
gets a call back.

00:22:52.666 --> 00:22:55.196 A:middle
This is not within the same
dynamic scope necessarily,

00:22:55.196 --> 00:22:57.136 A:middle
but we're going to call
back into you asking you

00:22:57.196 --> 00:22:58.496 A:middle
for the animation controller.

00:22:58.996 --> 00:23:04.056 A:middle
At some point later we're going
to say animate, transition,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.996 --> 00:23:04.056 A:middle
At some point later we're going
to say animate, transition,

00:23:04.316 --> 00:23:05.836 A:middle
and this is your code.

00:23:06.396 --> 00:23:08.346 A:middle
You're going to basically
implement that method

00:23:08.346 --> 00:23:10.836 A:middle
on your object that conforms

00:23:10.836 --> 00:23:13.716 A:middle
to the animated transitioning
protocol, you're going

00:23:13.716 --> 00:23:16.916 A:middle
to add the sub-view into the
container view, you're doing

00:23:16.916 --> 00:23:18.436 A:middle
to do some great animation.

00:23:18.816 --> 00:23:22.296 A:middle
And then one standard technique
is in the completion block

00:23:22.456 --> 00:23:24.706 A:middle
of the animate with
duration method,

00:23:24.816 --> 00:23:26.266 A:middle
you will call complete
transition.

00:23:26.816 --> 00:23:34.686 A:middle
Okay. So let's look a little
bit at some of these new APIs.

00:23:34.796 --> 00:23:37.746 A:middle
They're really, you know,
you can look at the docs,

00:23:37.746 --> 00:23:39.076 A:middle
you can look at the
header files,

00:23:39.366 --> 00:23:41.116 A:middle
but these are pretty
straight forward.

00:23:41.116 --> 00:23:44.506 A:middle
These are -- this is the new
transitioning delegate protocol.

00:23:45.206 --> 00:23:47.436 A:middle
The same thing for the
animation controller goes

00:23:47.526 --> 00:23:51.486 A:middle
for an interaction controller,
which we're going to talk about.

00:23:51.586 --> 00:23:55.906 A:middle
View controller has grown a
transitioning delegate property.

00:23:55.906 --> 00:23:58.256 A:middle
It's set on the presented
controller.

00:23:58.666 --> 00:24:02.286 A:middle
Just to make it clear, that's
kind of consistent with a lot

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.666 --> 00:24:02.286 A:middle
Just to make it clear, that's
kind of consistent with a lot

00:24:02.286 --> 00:24:05.316 A:middle
of the previous ways

00:24:05.316 --> 00:24:08.616 A:middle
that presentations
are kind of refined.

00:24:09.206 --> 00:24:11.656 A:middle
You set your values on
the presented controller.

00:24:12.256 --> 00:24:14.006 A:middle
We've grown a couple
of new methods

00:24:14.006 --> 00:24:15.446 A:middle
for the navigation controller,

00:24:15.986 --> 00:24:18.566 A:middle
again one for animation
controllers,

00:24:18.566 --> 00:24:20.056 A:middle
one for interaction controllers,

00:24:20.346 --> 00:24:22.056 A:middle
and ditto for tab
bar controller,

00:24:22.206 --> 00:24:26.566 A:middle
kind of nothing too much
to talk about there.

00:24:26.886 --> 00:24:33.386 A:middle
But the objects that they vend
have some interesting beef

00:24:33.386 --> 00:24:34.616 A:middle
to them.

00:24:34.616 --> 00:24:36.736 A:middle
First of all, they need to
implement animate transition.

00:24:36.956 --> 00:24:40.306 A:middle
And the implementation of
animate transition needs --

00:24:40.306 --> 00:24:41.826 A:middle
is -- takes responsibility

00:24:41.866 --> 00:24:44.156 A:middle
for inserting the two
view controllers view

00:24:44.426 --> 00:24:45.436 A:middle
in the container view.

00:24:46.236 --> 00:24:48.116 A:middle
That's because we don't know
what your animation is going

00:24:48.116 --> 00:24:50.406 A:middle
to be, and you might want to
put it in different places,

00:24:50.406 --> 00:24:53.476 A:middle
you might want to put it
above, below some other views.

00:24:53.716 --> 00:24:57.416 A:middle
So it's your responsibility
to do that.

00:24:57.586 --> 00:24:59.156 A:middle
You need to make sure
that the two in view --

00:24:59.606 --> 00:25:01.956 A:middle
that the to and from view
controllers' views are

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.606 --> 00:25:01.956 A:middle
that the to and from view
controllers' views are

00:25:01.956 --> 00:25:05.636 A:middle
where they need to be, and
you call complete transition.

00:25:06.136 --> 00:25:07.236 A:middle
Okay, let's talk a little bit

00:25:07.236 --> 00:25:10.106 A:middle
about interactive view
controller transitions.

00:25:10.106 --> 00:25:13.456 A:middle
Now interactive transitions
is kind of a whole new thing.

00:25:13.866 --> 00:25:18.936 A:middle
As I said, the pop
gesture is pervasive,

00:25:18.936 --> 00:25:22.416 A:middle
and probably you guys are going
to want to do something similar

00:25:22.416 --> 00:25:23.876 A:middle
with some of your
view controllers.

00:25:24.366 --> 00:25:27.976 A:middle
I've mentioned you can use
-- you can create your own.

00:25:28.756 --> 00:25:33.136 A:middle
I should also mention as an
aside that you can get a handle

00:25:33.136 --> 00:25:36.546 A:middle
on the default navigation
controller's pop

00:25:36.546 --> 00:25:37.756 A:middle
gesture recognizer.

00:25:37.756 --> 00:25:41.026 A:middle
So you can create dependencies
on it in case you have content

00:25:41.096 --> 00:25:43.036 A:middle
that perhaps you
don't want to --

00:25:43.666 --> 00:25:46.376 A:middle
that has its own gesture
recognizers that you don't want

00:25:46.376 --> 00:25:48.286 A:middle
to collide with the
pop gesture recognizer.

00:25:51.526 --> 00:25:54.236 A:middle
Interesting is that
although it might seem

00:25:54.236 --> 00:25:56.756 A:middle
that all interactive
transitions might be driven

00:25:56.756 --> 00:25:59.946 A:middle
by gesture recognizers, that
isn't necessarily the case.

00:25:59.946 --> 00:26:03.246 A:middle
You can -- anything that you
can drive programmatically

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.946 --> 00:26:03.246 A:middle
You can -- anything that you
can drive programmatically

00:26:03.246 --> 00:26:06.116 A:middle
in an iterative way can
actually be the source

00:26:06.116 --> 00:26:07.766 A:middle
of an interactive transition.

00:26:08.996 --> 00:26:13.346 A:middle
They typically go forward,
move forwards and backwards,

00:26:13.736 --> 00:26:18.046 A:middle
and they can often be cancelled
by -- they usually are started,

00:26:18.046 --> 00:26:23.346 A:middle
if they're not started we're --
we have nothing to talk about.

00:26:23.436 --> 00:26:28.806 A:middle
We provide this -- the only
concrete class that we provide

00:26:28.806 --> 00:26:31.276 A:middle
for all of this is
the UI percent driven

00:26:31.276 --> 00:26:32.486 A:middle
interaction transition.

00:26:33.146 --> 00:26:34.416 A:middle
And what's great about this is

00:26:34.416 --> 00:26:37.736 A:middle
that if you use a
UI view animation --

00:26:37.736 --> 00:26:41.796 A:middle
the UI view animation APIs in
your animate transition method,

00:26:41.796 --> 00:26:47.866 A:middle
we're going to take care of, you
know, reversing the animation,

00:26:47.866 --> 00:26:49.796 A:middle
cancelling it, doing
all that stuff.

00:26:49.796 --> 00:26:51.806 A:middle
You don't even have to call
the context transition --

00:26:51.806 --> 00:26:54.186 A:middle
the context object with
complete transition.

00:26:54.426 --> 00:26:57.616 A:middle
And so we're going to show a
couple of examples of that.

00:26:58.576 --> 00:27:02.176 A:middle
The protocol for interactive
transitioning really couldn't

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.576 --> 00:27:02.176 A:middle
The protocol for interactive
transitioning really couldn't

00:27:02.176 --> 00:27:02.726 A:middle
be simpler.

00:27:03.106 --> 00:27:04.606 A:middle
Start interactive transition.

00:27:05.236 --> 00:27:09.466 A:middle
That's called instead
of animate transition

00:27:10.216 --> 00:27:11.926 A:middle
on the animation controller.

00:27:12.176 --> 00:27:17.176 A:middle
Now it doesn't mean that
you don't need an animate

00:27:17.176 --> 00:27:19.006 A:middle
transition, because
maybe your inner --

00:27:19.006 --> 00:27:21.136 A:middle
maybe your transition isn't
going to be interactive.

00:27:21.686 --> 00:27:25.536 A:middle
Moreover, your start interactive
transition is free to call

00:27:25.536 --> 00:27:28.706 A:middle
out to the animation
controller's animate

00:27:28.706 --> 00:27:30.476 A:middle
transmission, as makes sense.

00:27:31.256 --> 00:27:36.866 A:middle
Those last optional properties
are most often used for the sake

00:27:36.866 --> 00:27:39.126 A:middle
of the UI percent driven
interaction transition,

00:27:39.126 --> 00:27:43.086 A:middle
and so when the interactive
portion of a transition stops,

00:27:43.536 --> 00:27:46.516 A:middle
you can kind of tell it
to speed up, slow down,

00:27:46.516 --> 00:27:51.106 A:middle
change its timing curve to
kind of finish the transition.

00:27:51.646 --> 00:27:55.426 A:middle
So let's go to this sequence
again and see what's different

00:27:55.426 --> 00:27:57.086 A:middle
between interactive
transitioning

00:27:57.516 --> 00:27:59.466 A:middle
and just non-interactive
transitioning.

00:27:59.466 --> 00:28:01.086 A:middle
So far everything
looks the same.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.466 --> 00:28:01.086 A:middle
So far everything
looks the same.

00:28:02.126 --> 00:28:03.306 A:middle
What's different is this.

00:28:03.806 --> 00:28:05.806 A:middle
In addition to asking for
the animation controller,

00:28:05.806 --> 00:28:07.306 A:middle
we ask for an interaction
controller.

00:28:07.656 --> 00:28:09.396 A:middle
If you don't provide an
animation controller,

00:28:09.396 --> 00:28:11.086 A:middle
we're never going to
ask the second question.

00:28:11.686 --> 00:28:13.456 A:middle
So you need to implement
both if you want

00:28:13.456 --> 00:28:16.216 A:middle
to implement interactive
transitions.

00:28:16.896 --> 00:28:20.926 A:middle
We're going to go through
this little picture,

00:28:20.926 --> 00:28:23.426 A:middle
because I think it's
illustrative of some

00:28:23.426 --> 00:28:24.666 A:middle
of the differences in terms

00:28:24.666 --> 00:28:27.906 A:middle
of what an interactive
transition entails.

00:28:28.616 --> 00:28:30.096 A:middle
First of all, we're
going to start

00:28:30.096 --> 00:28:32.186 A:middle
with this interactive
event handler.

00:28:32.186 --> 00:28:33.466 A:middle
I've kind of made it generic,

00:28:33.466 --> 00:28:35.876 A:middle
but let's imaging it's
a gesture recognizer.

00:28:35.876 --> 00:28:38.186 A:middle
And your gesture is going
to commence, and it's going

00:28:38.186 --> 00:28:39.696 A:middle
to say okay, this
-- I'm good to go,

00:28:39.696 --> 00:28:41.266 A:middle
start interactive transition.

00:28:41.266 --> 00:28:44.796 A:middle
And it's going to do that
by doing push, pop, present.

00:28:44.906 --> 00:28:46.876 A:middle
It doesn't call start
interactive transition.

00:28:47.316 --> 00:28:49.606 A:middle
The system calls start
interactive transition.

00:28:49.846 --> 00:28:52.166 A:middle
And once that happens, we're
going to call that method

00:28:52.166 --> 00:28:54.836 A:middle
on the interaction controller
that you vend, and now we're

00:28:54.836 --> 00:28:57.136 A:middle
in this update interactive
transition state.

00:28:57.476 --> 00:29:00.086 A:middle
And your gesture
recognizer is basically going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:57.476 --> 00:29:00.086 A:middle
And your gesture
recognizer is basically going

00:29:00.086 --> 00:29:02.816 A:middle
to be constantly calling
update interactive transition,

00:29:03.256 --> 00:29:05.136 A:middle
based on what's going
on with your gesture.

00:29:05.136 --> 00:29:07.766 A:middle
You might be computing
a percent complete,

00:29:07.766 --> 00:29:09.376 A:middle
you can compute a bunch
of different things.

00:29:09.376 --> 00:29:11.166 A:middle
But you're going to
be driving it there.

00:29:11.816 --> 00:29:14.766 A:middle
At some point, the
gesture is going to end,

00:29:14.766 --> 00:29:17.616 A:middle
or the interactive portion of
the transition is going to end,

00:29:18.306 --> 00:29:21.006 A:middle
and for illustrative purposes,

00:29:21.006 --> 00:29:23.056 A:middle
we're going through
the finish path,

00:29:23.366 --> 00:29:25.726 A:middle
which means that we're actually
completing the transition

00:29:25.726 --> 00:29:26.356 A:middle
we started.

00:29:26.656 --> 00:29:28.006 A:middle
But you might decide to go

00:29:28.006 --> 00:29:29.676 A:middle
through a different
path altogether,

00:29:29.676 --> 00:29:31.556 A:middle
and that's the transition
cancelling up there.

00:29:31.556 --> 00:29:35.836 A:middle
We're going to call the
context finish interactive

00:29:35.836 --> 00:29:42.396 A:middle
transitioning, and then in this
particular case the interaction

00:29:42.396 --> 00:29:45.036 A:middle
controller has decided it's
going to finish the transition

00:29:45.036 --> 00:29:47.416 A:middle
by calling the animation
controller's animate

00:29:47.416 --> 00:29:48.196 A:middle
transition method.

00:29:48.846 --> 00:29:54.276 A:middle
You don't need to do that, but
it often is convenient to do so.

00:29:54.646 --> 00:29:58.996 A:middle
And in the case of UI percent
driven interactive transitions,

00:29:58.996 --> 00:30:00.256 A:middle
that's in fact what we do.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:58.996 --> 00:30:00.256 A:middle
that's in fact what we do.

00:30:00.866 --> 00:30:06.256 A:middle
Finally, animation ends,
complete transition is called,

00:30:06.256 --> 00:30:08.256 A:middle
and you're back into
a consistent state,

00:30:08.256 --> 00:30:09.966 A:middle
and your interactive
transition is over.

00:30:10.886 --> 00:30:12.506 A:middle
So that's what's different.

00:30:12.506 --> 00:30:14.716 A:middle
I'm going to highlight
what's a little bit different

00:30:14.836 --> 00:30:16.496 A:middle
about interactive transitions.

00:30:16.956 --> 00:30:19.416 A:middle
First of all, there's
a start, which is kind

00:30:19.416 --> 00:30:22.006 A:middle
of the interactive phase,
then there's a phase

00:30:22.006 --> 00:30:24.726 A:middle
which is the transition
finishes, it's animating

00:30:24.726 --> 00:30:29.036 A:middle
in one direction or the other,
and it can either be cancelling

00:30:29.146 --> 00:30:31.226 A:middle
or finishing, and
then we complete.

00:30:32.056 --> 00:30:34.066 A:middle
So the easy way to do all
of this is, as I said,

00:30:34.156 --> 00:30:38.376 A:middle
use the UI view controller
percent driven transition,

00:30:38.406 --> 00:30:42.216 A:middle
you have to implement
animate presentation

00:30:43.006 --> 00:30:44.346 A:middle
on your animation controller,

00:30:44.666 --> 00:30:46.896 A:middle
and then your gesture
recognizer is going to drive it,

00:30:47.156 --> 00:30:53.656 A:middle
or whatever your generator for
the interactive transition is.

00:30:54.176 --> 00:30:55.856 A:middle
Typically we sub-class this.

00:30:55.996 --> 00:30:58.366 A:middle
You don't have to, but
it's useful to do so.

00:30:59.136 --> 00:31:01.746 A:middle
And instead of calling any --

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.136 --> 00:31:01.746 A:middle
And instead of calling any --

00:31:01.936 --> 00:31:04.336 A:middle
out to any of the context
methods, you're just going

00:31:04.336 --> 00:31:08.416 A:middle
to call out to the instance of
the percent-driven transition,

00:31:08.896 --> 00:31:12.206 A:middle
how much, how complete
you are or not, or whether

00:31:12.206 --> 00:31:14.726 A:middle
or not the transition
was canceled

00:31:14.806 --> 00:31:16.176 A:middle
or completed successfully.

00:31:19.076 --> 00:31:23.276 A:middle
So, this is what percent-driven
interactive transition

00:31:23.276 --> 00:31:23.936 A:middle
looks like.

00:31:24.236 --> 00:31:26.776 A:middle
It has those three methods
that you are going to call.

00:31:28.296 --> 00:31:31.866 A:middle
And this is another demo that
I actually forgot to give,

00:31:32.086 --> 00:31:35.556 A:middle
which -- but this is an example

00:31:35.556 --> 00:31:39.466 A:middle
of a tab bar controller
interactive transition using the

00:31:40.936 --> 00:31:42.896 A:middle
percent-driven transition.

00:31:42.896 --> 00:31:44.506 A:middle
And it's kind of cool.

00:31:44.506 --> 00:31:46.126 A:middle
It's using key frame animation,

00:31:46.126 --> 00:31:48.366 A:middle
it's using the new UI
view key frame animation,

00:31:48.366 --> 00:31:49.516 A:middle
and it's implementing this kind

00:31:49.516 --> 00:31:54.096 A:middle
of accordion transition
from tab to tab.

00:31:54.306 --> 00:31:57.376 A:middle
This is the one that I showed
you, which was the fold one.

00:31:57.376 --> 00:31:58.376 A:middle
And again, this is --

00:31:58.376 --> 00:32:01.586 A:middle
the interactive portion
of this is driven

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.376 --> 00:32:01.586 A:middle
the interactive portion
of this is driven

00:32:02.036 --> 00:32:03.566 A:middle
with the percent-driven
transition.

00:32:03.646 --> 00:32:08.406 A:middle
So that fold object, that
interactor is a sub-class

00:32:08.406 --> 00:32:10.516 A:middle
of percent-driven
interactive transition.

00:32:11.316 --> 00:32:16.556 A:middle
Those little methods in there,
those are methods that I define

00:32:16.556 --> 00:32:17.986 A:middle
to make it easy to implement.

00:32:17.986 --> 00:32:18.756 A:middle
One of the things I wanted

00:32:18.756 --> 00:32:22.916 A:middle
to know is what the navigation
controller was that I was in.

00:32:22.916 --> 00:32:26.226 A:middle
I also wanted to know if
things were interactive or not,

00:32:26.226 --> 00:32:28.946 A:middle
because I could either
transition interactively

00:32:28.946 --> 00:32:30.056 A:middle
or not interactively.

00:32:31.536 --> 00:32:33.396 A:middle
That's the code, that's it.

00:32:33.676 --> 00:32:35.886 A:middle
I've implemented a pinch
gesture recognizer.

00:32:36.566 --> 00:32:38.426 A:middle
It hangs off of that sub-class

00:32:38.426 --> 00:32:42.106 A:middle
of percent-driven interaction
transition, and all I need

00:32:42.106 --> 00:32:43.856 A:middle
to do is when the
gesture begins,

00:32:43.856 --> 00:32:46.936 A:middle
I call pop view controller,
when it continues

00:32:46.936 --> 00:32:48.926 A:middle
as the pinch moves
I call update,

00:32:48.926 --> 00:32:50.386 A:middle
I compute some percentage.

00:32:50.746 --> 00:32:53.276 A:middle
I'm doing this based on
the scale of the pinch.

00:32:54.316 --> 00:32:57.236 A:middle
And then when it ends,
I either call finish

00:32:57.236 --> 00:32:58.686 A:middle
or cancel, and that's it.

00:32:58.686 --> 00:33:00.856 A:middle
If you've sub-classed
percent-driven interaction

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.686 --> 00:33:00.856 A:middle
If you've sub-classed
percent-driven interaction

00:33:00.856 --> 00:33:03.196 A:middle
transition, you're going to
get all of your interactivity

00:33:03.196 --> 00:33:05.926 A:middle
with about that amount of
code, depending on the logic

00:33:05.926 --> 00:33:07.806 A:middle
of your interactive stuff.

00:33:08.656 --> 00:33:11.736 A:middle
So, we also do collection
view --

00:33:12.106 --> 00:33:14.446 A:middle
interactive collection
view transitions,

00:33:14.446 --> 00:33:16.706 A:middle
and we've grown the
API on collection view.

00:33:17.416 --> 00:33:19.336 A:middle
I'm going to bring
up my colleague,

00:33:19.596 --> 00:33:23.906 A:middle
who made me train a long time
to pronounce his last name.

00:33:24.236 --> 00:33:27.056 A:middle
It's probably the hardest
part of this presentation.

00:33:27.266 --> 00:33:29.276 A:middle
Olivier Gudkenesh [phonetic].

00:33:29.616 --> 00:33:32.466 A:middle
&gt;&gt; One year of rehearsal
almost paid off.

00:33:32.716 --> 00:33:37.426 A:middle
So I'd like to talk
about collection view.

00:33:38.756 --> 00:33:43.726 A:middle
We have very nice
interactive API in [inaudible].

00:33:43.726 --> 00:33:48.596 A:middle
And what's great is we
also added a new API

00:33:48.596 --> 00:33:53.516 A:middle
in collection view to drive
interactive layout transitions.

00:33:54.076 --> 00:33:56.756 A:middle
So it's really easy to use
with a view controller API.

00:33:56.756 --> 00:34:01.446 A:middle
And that new API is
actually a new layout,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:56.756 --> 00:34:01.446 A:middle
And that new API is
actually a new layout,

00:34:01.446 --> 00:34:04.816 A:middle
UI collection view
transition layout.

00:34:06.206 --> 00:34:10.886 A:middle
And what that layout
implements actually is a way

00:34:11.386 --> 00:34:14.085 A:middle
to interpolate between
two layouts.

00:34:14.636 --> 00:34:17.456 A:middle
It can be interactive or not,

00:34:17.565 --> 00:34:22.065 A:middle
usually it is interactive that's
a recent [inaudible] transition

00:34:22.065 --> 00:34:23.606 A:middle
progress property.

00:34:24.876 --> 00:34:27.466 A:middle
You can sub-class it,
which is really useful.

00:34:27.876 --> 00:34:33.255 A:middle
And it was designed to be
really simple to integrate

00:34:33.255 --> 00:34:35.275 A:middle
with interactive view
controller transitions.

00:34:35.656 --> 00:34:38.396 A:middle
How does that work?

00:34:38.936 --> 00:34:41.666 A:middle
Let's say that my current layout

00:34:41.666 --> 00:34:43.525 A:middle
in my collection
view is layout A.

00:34:44.166 --> 00:34:47.666 A:middle
The next layout is layout B.

00:34:48.146 --> 00:34:53.606 A:middle
So today in iOS 6 you could
use set collection view layout,

00:34:53.606 --> 00:34:58.946 A:middle
and you would say yes,
and we would just animate.

00:34:58.946 --> 00:35:01.766 A:middle
If you use a UI collection
view traditional layout,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.946 --> 00:35:01.766 A:middle
If you use a UI collection
view traditional layout,

00:35:03.426 --> 00:35:07.076 A:middle
you can actually drive
that transition progress,

00:35:07.546 --> 00:35:12.206 A:middle
so at 0 it's going to be
exactly like layout A.

00:35:13.476 --> 00:35:19.686 A:middle
But if you set that value to
0.5, from a gesture recognizer

00:35:19.686 --> 00:35:23.456 A:middle
for instance, then we could
compute the interpolation

00:35:23.456 --> 00:35:25.166 A:middle
between all the sets.

00:35:26.266 --> 00:35:30.186 A:middle
And so when you drive
that to 100%,

00:35:30.646 --> 00:35:33.246 A:middle
it's going to look
like the next layout.

00:35:33.246 --> 00:35:38.146 A:middle
So you can drive back and
forth this transition progress.

00:35:38.866 --> 00:35:41.396 A:middle
And UI collection
view can go to 11.

00:35:42.086 --> 00:35:46.956 A:middle
[Laughter] So we sometimes
have this really nice scale

00:35:46.956 --> 00:35:51.026 A:middle
up at the end of a
transition, and then scale

00:35:51.026 --> 00:35:54.216 A:middle
down back to the real value.

00:35:54.776 --> 00:35:57.356 A:middle
And we do that for -- we do

00:35:57.356 --> 00:36:00.096 A:middle
that in UI collection view
transform layout for you.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:57.356 --> 00:36:00.096 A:middle
that in UI collection view
transform layout for you.

00:36:00.696 --> 00:36:01.916 A:middle
You don't have to do anything.

00:36:02.516 --> 00:36:08.876 A:middle
And you don't even need to drive
transitional progress past 1.0.

00:36:09.246 --> 00:36:12.826 A:middle
We do that under the hood.

00:36:12.826 --> 00:36:14.836 A:middle
How does that work?

00:36:15.036 --> 00:36:18.586 A:middle
We added three new methods
in UI collection view --

00:36:19.346 --> 00:36:23.546 A:middle
start interactive transition
to collection view layout

00:36:23.986 --> 00:36:28.866 A:middle
with a completion ender,
and I'm going to initiate

00:36:28.866 --> 00:36:32.626 A:middle
that interactive transition
to the next layout.

00:36:33.516 --> 00:36:35.776 A:middle
Then from your gesture
for instance,

00:36:35.776 --> 00:36:38.506 A:middle
you can drive the
transition progress,

00:36:38.506 --> 00:36:42.196 A:middle
because the value you
get is an instance

00:36:42.286 --> 00:36:45.036 A:middle
of UI collection view
transition layout.

00:36:46.486 --> 00:36:49.826 A:middle
And when the gesture
ends, and you won't ask

00:36:49.826 --> 00:36:52.146 A:middle
to animate the next layout,

00:36:52.806 --> 00:36:56.486 A:middle
just call finish interactive
transition, or if you want

00:36:56.486 --> 00:37:00.946 A:middle
to get back the old
current layout,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:56.486 --> 00:37:00.946 A:middle
to get back the old
current layout,

00:37:00.946 --> 00:37:03.746 A:middle
just call [inaudible]
interactive transition.

00:37:05.836 --> 00:37:10.246 A:middle
There is a new delegate method
in UI collection view delegate,

00:37:11.096 --> 00:37:15.146 A:middle
collection view transition
layout for layout to new layout.

00:37:15.616 --> 00:37:20.136 A:middle
Why that? You might want
different interactive transition

00:37:20.136 --> 00:37:24.596 A:middle
from layout A to layout B, but
something a little bit different

00:37:24.596 --> 00:37:26.636 A:middle
from B to C or C to D.

00:37:26.766 --> 00:37:28.106 A:middle
So you can actually tweak

00:37:28.416 --> 00:37:33.536 A:middle
and return different collection
view tradition layout sub-class

00:37:34.056 --> 00:37:35.356 A:middle
for all these cases.

00:37:35.866 --> 00:37:40.156 A:middle
That does not replace the
existing set collection view

00:37:40.156 --> 00:37:42.926 A:middle
layout and [inaudible],
which is completely automatic

00:37:42.926 --> 00:37:44.796 A:middle
and really easy to use.

00:37:45.316 --> 00:37:47.916 A:middle
When collection layout
is really useful is

00:37:49.386 --> 00:37:50.756 A:middle
when you try to [inaudible]
that.

00:37:51.176 --> 00:37:55.406 A:middle
Why? Because you
can tweak the cells,

00:37:56.066 --> 00:37:58.356 A:middle
position the layout
attributes we do compute.

00:37:58.896 --> 00:38:02.686 A:middle
Which means that you could drive
change, so cell position based

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:58.896 --> 00:38:02.686 A:middle
Which means that you could drive
change, so cell position based

00:38:03.066 --> 00:38:05.176 A:middle
on the gesture position.

00:38:05.976 --> 00:38:07.536 A:middle
What can I implement with that?

00:38:08.116 --> 00:38:13.686 A:middle
Photos, pinch and move,
really easy, 10 lines of code.

00:38:14.556 --> 00:38:19.076 A:middle
And I do have simple code to
prove that, so you can check.

00:38:20.316 --> 00:38:22.866 A:middle
How can you use that?

00:38:22.866 --> 00:38:25.796 A:middle
You just create an
instance of your own task

00:38:26.956 --> 00:38:29.616 A:middle
in this delegate method.

00:38:29.616 --> 00:38:34.046 A:middle
And on finishing [inaudible]
what happens is while you are

00:38:34.046 --> 00:38:37.196 A:middle
changing this transition
progress property,

00:38:37.796 --> 00:38:40.666 A:middle
we are actually tracking
the current velocity.

00:38:41.256 --> 00:38:44.456 A:middle
So we will match that
when we finish [inaudible]

00:38:44.546 --> 00:38:48.036 A:middle
and drive the end
of this animation.

00:38:48.656 --> 00:38:51.036 A:middle
And because you might sub-class,

00:38:51.246 --> 00:38:54.866 A:middle
you might have your own
parameters, it would be nice

00:38:54.866 --> 00:38:56.376 A:middle
to be able to actually
participate

00:38:56.376 --> 00:38:58.716 A:middle
in that nice velocity matching.

00:38:59.116 --> 00:39:03.696 A:middle
So you can actually ask
us to track your values,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:59.116 --> 00:39:03.696 A:middle
So you can actually ask
us to track your values,

00:39:04.256 --> 00:39:09.726 A:middle
and then in this final phase
you can access an updated value

00:39:09.726 --> 00:39:13.546 A:middle
in sync with your own animation.

00:39:14.106 --> 00:39:18.306 A:middle
So I'd like to show you
what you can do with that.

00:39:18.906 --> 00:39:22.816 A:middle
A very simple --
just some layout,

00:39:23.636 --> 00:39:27.106 A:middle
a stock layout that's a
collection view controller

00:39:27.106 --> 00:39:30.226 A:middle
implemented in navigation
controller.

00:39:30.646 --> 00:39:33.986 A:middle
So I have this nice layout
to layout automatic mode.

00:39:34.416 --> 00:39:38.166 A:middle
We add it to collection view
controller, so when I tap I go

00:39:38.166 --> 00:39:40.496 A:middle
to the next collection
view controller.

00:39:40.816 --> 00:39:44.996 A:middle
I can tap back, and I back --

00:39:44.996 --> 00:39:47.666 A:middle
I'm back to the first
collection view controller.

00:39:48.196 --> 00:39:51.676 A:middle
Plus I can also drive
interaction

00:39:51.676 --> 00:39:55.136 A:middle
by implementing the interactive
view controller transitioning

00:39:55.136 --> 00:40:00.946 A:middle
protocol with a gesture, and
I can do something like that.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:55.136 --> 00:40:00.946 A:middle
protocol with a gesture, and
I can do something like that.

00:40:01.106 --> 00:40:04.996 A:middle
Through the current layout right
now is a transition layout,

00:40:06.126 --> 00:40:08.886 A:middle
I can [inaudible], and I'm back

00:40:08.886 --> 00:40:10.786 A:middle
to the first layout
automatically.

00:40:11.796 --> 00:40:13.976 A:middle
And I can pinch to completion.

00:40:14.506 --> 00:40:19.436 A:middle
And that is a small
effect of the end.

00:40:19.436 --> 00:40:24.306 A:middle
And what's great is I can pinch
back, which is actually a pop

00:40:24.306 --> 00:40:26.496 A:middle
to the previous view controller.

00:40:26.866 --> 00:40:30.976 A:middle
And pay attention to
the navigation bar.

00:40:31.516 --> 00:40:37.666 A:middle
[ Silence ]

00:40:38.166 --> 00:40:39.496 A:middle
And that's just one
line of code.

00:40:39.496 --> 00:40:42.526 A:middle
Because the only thing I'm doing
is I'm using the view controller

00:40:42.526 --> 00:40:45.786 A:middle
API to track this
person progress.

00:40:46.216 --> 00:40:49.196 A:middle
We have a few other
[inaudible] in collection view

00:40:49.196 --> 00:40:51.226 A:middle
for transitions,
target [inaudible] set

00:40:51.226 --> 00:40:52.596 A:middle
for proposed [inaudible] set.

00:40:53.806 --> 00:40:57.226 A:middle
When you're updating data
sources, changing layouts,

00:40:57.226 --> 00:40:59.726 A:middle
or changing bounds
for a collection view,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:00.166 --> 00:41:05.336 A:middle
we try to guess what is the
best [inaudible] set for that.

00:41:06.146 --> 00:41:10.826 A:middle
sometimes it's just our
best guess, but not correct.

00:41:10.826 --> 00:41:15.986 A:middle
If you actually want to
specify exactly what this ending

00:41:16.106 --> 00:41:19.026 A:middle
[inaudible] set should be,
you can implement this method

00:41:19.026 --> 00:41:19.756 A:middle
in your layout,

00:41:19.756 --> 00:41:25.166 A:middle
and we [inaudible] use the
exact [inaudible] set you return

00:41:25.386 --> 00:41:29.166 A:middle
for this bounds change
data source update,

00:41:29.296 --> 00:41:31.406 A:middle
or collection view
layout transition.

00:41:32.516 --> 00:41:36.216 A:middle
We have three new method on
UI collection view layout,

00:41:36.216 --> 00:41:40.036 A:middle
so you can be notified
when we are about to move

00:41:40.036 --> 00:41:44.536 A:middle
to the next layout, and
from another layout.

00:41:45.676 --> 00:41:49.856 A:middle
We have better animations
in layout transition

00:41:49.856 --> 00:41:53.636 A:middle
by supporting the [inaudible]
layout [inaudible] method,

00:41:53.636 --> 00:41:55.506 A:middle
and we have a new
compression ender

00:41:55.506 --> 00:41:58.556 A:middle
for the automatic set
collection view layout animated.

00:41:59.356 --> 00:42:01.406 A:middle
And that's it for
collection view.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.356 --> 00:42:01.406 A:middle
And that's it for
collection view.

00:42:01.406 --> 00:42:03.906 A:middle
I'd like to bring
back Bruce, thank you.

00:42:04.176 --> 00:42:04.976 A:middle
&gt;&gt; Thanks, Olivier.

00:42:05.686 --> 00:42:09.046 A:middle
So we're going to talk more
about some of the details

00:42:09.096 --> 00:42:11.756 A:middle
of interactive transitions now.

00:42:12.166 --> 00:42:13.486 A:middle
In particular, we're going

00:42:13.486 --> 00:42:15.636 A:middle
to talk a little bit
about cancellation.

00:42:16.176 --> 00:42:19.996 A:middle
So that's that state
diagram that I had showed

00:42:19.996 --> 00:42:25.376 A:middle
in an earlier slide, and we're
going to kind of zoom in on kind

00:42:25.376 --> 00:42:28.036 A:middle
of the two different states,
or paths that you can go

00:42:28.036 --> 00:42:34.616 A:middle
through as an interactive
transition comes to an end.

00:42:35.076 --> 00:42:39.256 A:middle
And so as an interactive
transition starts,

00:42:39.566 --> 00:42:43.086 A:middle
the machinery behind in
UI kit is actually going

00:42:43.086 --> 00:42:45.496 A:middle
to be making calls out
to view will appear,

00:42:45.496 --> 00:42:48.486 A:middle
view will disappear, will show
view controller, all the stuff

00:42:48.836 --> 00:42:54.706 A:middle
that you've normally used to
kind of control what's happening

00:42:54.706 --> 00:42:58.226 A:middle
in your application as things
come on and off screen.

00:42:59.016 --> 00:43:01.626 A:middle
And typically what happens
is we go from disappeared

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:59.016 --> 00:43:01.626 A:middle
And typically what happens
is we go from disappeared

00:43:01.626 --> 00:43:03.276 A:middle
to appearing, to
appeared to disappearing.

00:43:04.386 --> 00:43:05.616 A:middle
That's when life is good.

00:43:06.596 --> 00:43:08.396 A:middle
However, we can also do this.

00:43:08.396 --> 00:43:10.816 A:middle
We can go from appearing
to disappearing,

00:43:10.816 --> 00:43:12.256 A:middle
and from disappearing
back to appearing.

00:43:12.916 --> 00:43:16.766 A:middle
Now the reality is we
could do this even in iOS 5

00:43:16.766 --> 00:43:20.456 A:middle
if you built a custom
-- well not a custom,

00:43:20.456 --> 00:43:23.266 A:middle
but you built your own
container view controller.

00:43:23.266 --> 00:43:25.916 A:middle
These are kind of
legal transitions,

00:43:25.916 --> 00:43:28.576 A:middle
but now they're appearing a
lot more when you can kind

00:43:28.576 --> 00:43:32.616 A:middle
of cancel based on an
interactive gesture.

00:43:33.066 --> 00:43:35.126 A:middle
Take home message
here is don't assume

00:43:35.126 --> 00:43:37.346 A:middle
that view did appear
follows view will appear,

00:43:37.506 --> 00:43:42.216 A:middle
or view will disappear, or view
did disappear will follow view

00:43:42.216 --> 00:43:42.946 A:middle
will disappear.

00:43:43.436 --> 00:43:47.866 A:middle
Some colleagues of mine have
rid me kind of ruthlessly

00:43:47.866 --> 00:43:50.646 A:middle
that view will appear really
should probably be called view

00:43:50.646 --> 00:43:53.296 A:middle
might appear, or view
will probably appear,

00:43:53.776 --> 00:43:55.656 A:middle
or I really wish this
view would appear.

00:43:55.726 --> 00:44:00.616 A:middle
But most of the time
what it's saying is true.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:55.726 --> 00:44:00.616 A:middle
But most of the time
what it's saying is true.

00:44:00.616 --> 00:44:02.256 A:middle
But now you've got
to kind of take

00:44:02.256 --> 00:44:04.716 A:middle
into account that
maybe it won't.

00:44:05.456 --> 00:44:06.946 A:middle
And so we've added some new API

00:44:07.226 --> 00:44:13.036 A:middle
to help you deal
with some of this.

00:44:13.256 --> 00:44:18.076 A:middle
And to do that, we've introduced
a new object that you can get

00:44:18.076 --> 00:44:19.456 A:middle
when you're in a transition.

00:44:19.676 --> 00:44:23.376 A:middle
And you get it by asking
the view controller --

00:44:23.376 --> 00:44:26.066 A:middle
one of the view controller
participants of the transition.

00:44:26.066 --> 00:44:28.126 A:middle
It can really be the
presenting, the presented,

00:44:28.126 --> 00:44:29.526 A:middle
the push, the pop, whatever.

00:44:29.786 --> 00:44:31.656 A:middle
As long as they're
involved in a transition,

00:44:31.656 --> 00:44:34.266 A:middle
you can get this thing called
a transition coordinator.

00:44:34.776 --> 00:44:39.566 A:middle
And the first thing
I'd like to point

00:44:39.566 --> 00:44:42.326 A:middle
out is the transition
coordinator conforms

00:44:42.326 --> 00:44:45.756 A:middle
to this other thing called a
transition coordinator context.

00:44:46.436 --> 00:44:50.246 A:middle
It's really that one of
these protocols is passive,

00:44:50.506 --> 00:44:54.176 A:middle
and the coordinator kind of
sub-protocol as it were kind

00:44:54.176 --> 00:44:56.276 A:middle
of adds an active part to it.

00:44:56.276 --> 00:44:58.916 A:middle
And in particular this
one that I've highlighted,

00:44:58.916 --> 00:45:03.876 A:middle
notify when interaction ends
using block is what you can use

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:58.916 --> 00:45:03.876 A:middle
notify when interaction ends
using block is what you can use

00:45:03.876 --> 00:45:08.176 A:middle
to help manage the untoward
effects of view did disappear

00:45:08.176 --> 00:45:11.446 A:middle
and not actually being called
when you expected it to.

00:45:12.596 --> 00:45:14.776 A:middle
So one of the things about the
coordinator context, you know,

00:45:14.776 --> 00:45:17.006 A:middle
the passive component, is

00:45:17.006 --> 00:45:18.846 A:middle
that it has these
interesting properties,

00:45:18.846 --> 00:45:22.336 A:middle
like was the transition
cancelled, or did it start

00:45:22.336 --> 00:45:23.966 A:middle
out as an interactive
transition,

00:45:24.356 --> 00:45:25.576 A:middle
is it still interactive?

00:45:26.016 --> 00:45:27.956 A:middle
And you can ask all
those questions

00:45:27.956 --> 00:45:32.586 A:middle
as the transition is unfolding,
and in particular you can ask

00:45:32.586 --> 00:45:37.656 A:middle
that question inside of a
block that you have posted,

00:45:37.656 --> 00:45:40.516 A:middle
that you've asked the transition
coordinator to execute

00:45:40.516 --> 00:45:43.166 A:middle
at a certain point in the
interactive transition.

00:45:43.776 --> 00:45:45.816 A:middle
So say you have view
will appear,

00:45:46.366 --> 00:45:49.706 A:middle
and in your view will
appear you have some method

00:45:49.706 --> 00:45:51.936 A:middle
that does all these
kind of side effects,

00:45:51.936 --> 00:45:53.916 A:middle
assuming that view did appear
is going to get called.

00:45:53.916 --> 00:45:56.846 A:middle
And believe me, there's
lots of you out there

00:45:56.846 --> 00:45:58.166 A:middle
that have methods like that.

00:45:58.636 --> 00:45:59.456 A:middle
I know we do.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:00.056 --> 00:46:03.096 A:middle
And what you're going to
do is you're going to call

00:46:03.096 --> 00:46:05.586 A:middle
that method, and then within the
same lexical scope you're going

00:46:05.586 --> 00:46:08.986 A:middle
to ask for a transition
coordinator, and you're going

00:46:08.986 --> 00:46:10.066 A:middle
to check wait, am I in --

00:46:10.066 --> 00:46:11.796 A:middle
is this even interactive
to begin with?

00:46:11.796 --> 00:46:15.456 A:middle
And if it is interactive,
you're going to call notify

00:46:15.456 --> 00:46:16.846 A:middle
when interaction ends.

00:46:16.846 --> 00:46:18.686 A:middle
That doesn't mean that
the transition ends.

00:46:18.686 --> 00:46:20.796 A:middle
There's -- again, there's this
important differentiation.

00:46:20.796 --> 00:46:22.826 A:middle
There's the interactive
portion of a transition,

00:46:23.176 --> 00:46:25.716 A:middle
then there's the portion
where it kind of finishes,

00:46:26.196 --> 00:46:27.716 A:middle
and then you -- then
it's over for real.

00:46:28.026 --> 00:46:31.826 A:middle
So this block that you're going
to call is going to get called

00:46:32.156 --> 00:46:34.106 A:middle
when the interactive
portion ends.

00:46:34.106 --> 00:46:37.166 A:middle
And at that point you can
ask the context that's passed

00:46:37.166 --> 00:46:40.966 A:middle
in hey, did I get
cancelled or not?

00:46:40.966 --> 00:46:42.196 A:middle
And if you did get cancelled,

00:46:42.446 --> 00:46:45.656 A:middle
you can then undo the side
effects that you were expecting

00:46:45.656 --> 00:46:50.256 A:middle
to get undone in
view did appear.

00:46:50.456 --> 00:46:53.056 A:middle
Okay. So that's kind of nice.

00:46:53.266 --> 00:46:56.116 A:middle
Least there's a way
to manage that.

00:46:56.686 --> 00:47:00.106 A:middle
But the transition
coordinator's kind of cool,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:56.686 --> 00:47:00.106 A:middle
But the transition
coordinator's kind of cool,

00:47:00.106 --> 00:47:02.326 A:middle
because as we implemented it,

00:47:02.326 --> 00:47:05.276 A:middle
we realized that it was
actually really easy

00:47:05.276 --> 00:47:09.476 A:middle
to do a few other things that a
lot of you have been requesting.

00:47:09.996 --> 00:47:15.696 A:middle
So one is that you can basically
get a completion handler to run

00:47:15.916 --> 00:47:18.896 A:middle
when the entire transition
really completes.

00:47:19.206 --> 00:47:21.056 A:middle
I don't mean when the
interactive portion ends,

00:47:21.056 --> 00:47:23.446 A:middle
I mean when the whole
thing is done, you know,

00:47:23.446 --> 00:47:24.786 A:middle
like the completion
handler that's

00:47:24.786 --> 00:47:28.656 A:middle
on present view controller,
or dismiss view controller.

00:47:30.036 --> 00:47:32.416 A:middle
Another thing that you can do
is you can say you know what?

00:47:33.276 --> 00:47:36.936 A:middle
When this transition
runs, and is animating,

00:47:36.936 --> 00:47:38.716 A:middle
I want to run this other thing

00:47:38.796 --> 00:47:42.036 A:middle
within the animation
block of the transition.

00:47:42.606 --> 00:47:44.706 A:middle
Now I don't know how many
of you out there have kind

00:47:44.706 --> 00:47:48.196 A:middle
of been saying okay, how long
does this push view controller

00:47:48.196 --> 00:47:49.076 A:middle
transition take?

00:47:49.076 --> 00:47:51.136 A:middle
And you get out your stopwatch,
and you figure it out,

00:47:51.136 --> 00:47:53.156 A:middle
because you want to do
something that's kind

00:47:53.156 --> 00:47:55.326 A:middle
of synchronized with
that animation.

00:47:55.806 --> 00:47:58.176 A:middle
Well you don't have to do that
anymore, because there's now API

00:47:58.176 --> 00:47:59.576 A:middle
on transition coordinator

00:47:59.576 --> 00:48:03.116 A:middle
that you can animate alongside
the running transition.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.576 --> 00:48:03.116 A:middle
that you can animate alongside
the running transition.

00:48:03.416 --> 00:48:06.096 A:middle
So to make that more
useful -- I mean this works,

00:48:06.096 --> 00:48:11.536 A:middle
the transition coordinator
works for any custom transition

00:48:11.536 --> 00:48:16.236 A:middle
that you might build yourself,
but it also works for our

00:48:16.236 --> 00:48:19.036 A:middle
out of the box UI navigation
controller transitions,

00:48:19.146 --> 00:48:21.786 A:middle
just regular push pop
set view controller.

00:48:22.466 --> 00:48:24.996 A:middle
So in other words, you can get
a transition coordinator for an

00:48:24.996 --> 00:48:27.486 A:middle
out of the box navigation
controller transition.

00:48:27.646 --> 00:48:30.446 A:middle
It will also work for
present and dismiss.

00:48:31.596 --> 00:48:32.996 A:middle
So it's kind of useful now,

00:48:32.996 --> 00:48:34.666 A:middle
because you can do
stuff like this.

00:48:35.416 --> 00:48:37.446 A:middle
First of all let's
look at the methods.

00:48:37.926 --> 00:48:42.286 A:middle
There's two of them, one is
called -- one is the easier one,

00:48:42.286 --> 00:48:45.776 A:middle
it's called -- there's
a typo there,

00:48:45.776 --> 00:48:48.626 A:middle
it's animate alongside
transition completion,

00:48:49.266 --> 00:48:52.716 A:middle
and the other is animate
alongside transition

00:48:52.716 --> 00:48:54.956 A:middle
in view animation completion.

00:48:56.016 --> 00:49:00.466 A:middle
And basically you pass
in an animation block

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:56.016 --> 00:49:00.466 A:middle
And basically you pass
in an animation block

00:49:00.466 --> 00:49:02.586 A:middle
that animates alongside, you
pass in a completion handler

00:49:02.586 --> 00:49:05.676 A:middle
that runs after it's all done,
and the second variation is kind

00:49:05.676 --> 00:49:07.456 A:middle
of a more advanced feature.

00:49:08.056 --> 00:49:10.166 A:middle
Most of the time you don't need
it, because if you're trying

00:49:10.166 --> 00:49:12.326 A:middle
to animate something
alongside the transition,

00:49:12.326 --> 00:49:16.366 A:middle
which is within the view
hierarchy of the container view

00:49:16.796 --> 00:49:19.706 A:middle
that you know about, because
it's in the context objects

00:49:19.706 --> 00:49:21.876 A:middle
that you can query
about, then you don't need

00:49:21.876 --> 00:49:23.226 A:middle
to specify the other view.

00:49:23.486 --> 00:49:26.076 A:middle
But sometimes you might have
a view that you actually want

00:49:26.076 --> 00:49:29.206 A:middle
to do an animation in
that is actually not part

00:49:29.206 --> 00:49:32.026 A:middle
of the view hierarchy that the
transition is taking place in.

00:49:32.026 --> 00:49:34.606 A:middle
And in that case you
can specify that view,

00:49:34.606 --> 00:49:39.836 A:middle
and that's what the second
API variant is all about.

00:49:40.016 --> 00:49:42.436 A:middle
So, let's have some fun with it.

00:49:43.096 --> 00:49:46.026 A:middle
Push view controller
animated yes.

00:49:46.656 --> 00:49:48.156 A:middle
And what you want
to do is you want

00:49:48.336 --> 00:49:50.676 A:middle
to have a completion
handler that runs

00:49:50.836 --> 00:49:53.136 A:middle
after the push finishes.

00:49:53.776 --> 00:49:54.786 A:middle
What you're going to
do is you're going

00:49:54.786 --> 00:49:56.346 A:middle
to grab a transition
coordinator,

00:49:56.346 --> 00:49:57.966 A:middle
and then you're just going

00:49:57.966 --> 00:50:00.606 A:middle
to call animate alongside
transition.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:57.966 --> 00:50:00.606 A:middle
to call animate alongside
transition.

00:50:00.606 --> 00:50:02.606 A:middle
You don't even have
to pass in anything

00:50:02.606 --> 00:50:05.326 A:middle
for the animation
portion, just pass in nil.

00:50:06.246 --> 00:50:07.726 A:middle
Specify completion block,

00:50:07.826 --> 00:50:10.036 A:middle
and now you have a
completion handler

00:50:10.036 --> 00:50:13.366 A:middle
on push view controller
-- pop view controller.

00:50:14.106 --> 00:50:17.366 A:middle
An interesting point of
difference is is that --

00:50:17.366 --> 00:50:19.686 A:middle
and hopefully none of you rely
on this, but I'm going to kind

00:50:19.686 --> 00:50:21.726 A:middle
of spell it out because I
have a little bit of time --

00:50:22.396 --> 00:50:25.976 A:middle
is that push view
controller animated yes used

00:50:25.976 --> 00:50:30.516 A:middle
to be a little more
eager prior to iOS 7.

00:50:31.156 --> 00:50:34.386 A:middle
In iOS 7 now, push view
controller animated yes is going

00:50:34.386 --> 00:50:38.126 A:middle
to kind of defer its
transition the same way

00:50:38.446 --> 00:50:40.656 A:middle
that push view controller
animated no did.

00:50:41.046 --> 00:50:43.136 A:middle
So for most of you that's
not going to be an issue,

00:50:44.156 --> 00:50:48.796 A:middle
but keep in mind that we kind of
-- it's an implementation detail

00:50:48.796 --> 00:50:53.596 A:middle
about the exact timing of
when the actual transition's

00:50:53.596 --> 00:50:57.606 A:middle
animations commence or not.

00:50:58.416 --> 00:51:01.196 A:middle
Alright. So, I like this quote.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:58.416 --> 00:51:01.196 A:middle
Alright. So, I like this quote.

00:51:02.036 --> 00:51:04.576 A:middle
We've kind of created a lot

00:51:04.576 --> 00:51:06.786 A:middle
of things here, and
you can go crazy.

00:51:08.586 --> 00:51:11.116 A:middle
And I want to give
you an example

00:51:11.116 --> 00:51:13.706 A:middle
of what might be irresponsible.

00:51:15.116 --> 00:51:19.456 A:middle
So here I have a view controller
and navigation controller,

00:51:19.456 --> 00:51:24.776 A:middle
and I'm using UI kit dynamics,
and [Laughter] so it's kind

00:51:24.996 --> 00:51:32.146 A:middle
of fun, but maybe you don't
want to build your UI like that.

00:51:32.146 --> 00:51:34.056 A:middle
So let's do a quick
summary, and then I'm going

00:51:34.056 --> 00:51:35.866 A:middle
to talk a little bit
about what we're going

00:51:35.866 --> 00:51:37.216 A:middle
to talk about this afternoon.

00:51:38.606 --> 00:51:42.836 A:middle
We have basically provided
you guys with a lot

00:51:42.836 --> 00:51:45.186 A:middle
of new UI view based
animation APIs.

00:51:45.186 --> 00:51:47.706 A:middle
We created a brand new
snapshotting mechanism

00:51:47.706 --> 00:51:48.736 A:middle
that you can use with them,

00:51:49.116 --> 00:51:52.176 A:middle
and you can go wild
creating fantastic animations

00:51:52.176 --> 00:51:53.546 A:middle
and view controller transitions.

00:51:54.616 --> 00:51:57.586 A:middle
All these view controller
transitions can be customized,

00:51:57.676 --> 00:52:01.166 A:middle
UI collection view
controller can be used now,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:51:57.676 --> 00:52:01.166 A:middle
UI collection view
controller can be used now,

00:52:01.636 --> 00:52:04.066 A:middle
it can be used really
well with the inside

00:52:04.066 --> 00:52:05.496 A:middle
of a navigation controller.

00:52:06.536 --> 00:52:08.386 A:middle
It's protocol-based,
which might seem

00:52:08.576 --> 00:52:11.306 A:middle
like it's a little abstract,

00:52:11.306 --> 00:52:13.116 A:middle
but it actually gives
you an incredible amount

00:52:13.116 --> 00:52:15.236 A:middle
of flexibility, because
we're not binding you

00:52:15.236 --> 00:52:17.626 A:middle
to any specific object
to implement

00:52:17.626 --> 00:52:20.536 A:middle
that animation controller, or
the interaction controllers.

00:52:21.706 --> 00:52:26.136 A:middle
Remember that you can create
interactive transitions

00:52:26.136 --> 00:52:30.936 A:middle
and view will appear and view
will probably appear might be

00:52:30.936 --> 00:52:32.256 A:middle
more appropriate, and you need

00:52:32.256 --> 00:52:35.726 A:middle
to possibly take
action for that.

00:52:35.996 --> 00:52:39.336 A:middle
We've created a brand new object
called a transition coordinator

00:52:39.626 --> 00:52:41.726 A:middle
that provides some
great new functionality,

00:52:41.726 --> 00:52:45.146 A:middle
as well as a means to
deal with the cancel phase

00:52:45.206 --> 00:52:46.496 A:middle
of an interactive transition.

00:52:47.036 --> 00:52:51.966 A:middle
And for more information
on this,

00:52:52.206 --> 00:52:56.296 A:middle
please contact our fearless
evangelist, Jake Behrens.

00:52:56.766 --> 00:53:00.686 A:middle
I would like to point out a
couple of related sessions,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:52:56.766 --> 00:53:00.686 A:middle
I would like to point out a
couple of related sessions,

00:53:00.686 --> 00:53:02.816 A:middle
and one of which is going
to be this afternoon

00:53:02.816 --> 00:53:04.006 A:middle
that Ol [phonetic] and I --

00:53:04.296 --> 00:53:07.226 A:middle
Ol by the way, in addition to
collection views, you know,

00:53:07.226 --> 00:53:09.996 A:middle
has changed the gravitational
constant in UI kit.

00:53:09.996 --> 00:53:14.916 A:middle
And we're going to be talking
about how to use UI kit dynamics

00:53:14.916 --> 00:53:17.426 A:middle
in a more advanced way, and in
particular I will be talking

00:53:17.426 --> 00:53:18.966 A:middle
about using it with transitions.

00:53:19.126 --> 00:53:19.836 A:middle
And that's it.

00:53:19.836 --> 00:53:21.476 A:middle
Thank you for coming, have
a great rest of the day.

00:53:22.516 --> 00:53:25.516 A:middle
[ Applause ]

00:53:26.016 --> 00:53:31.186 A:middle
[ Silence ]

